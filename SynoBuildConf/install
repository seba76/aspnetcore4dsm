#!/bin/bash

### Use PKG_DIR as working directory.
PKG_DIR=/tmp/_dotnet_spk
rm -rf $PKG_DIR
mkdir -p $PKG_DIR

### get spk packing functions
#source /pkgscripts/include/pkg_util.sh
source /pkgscripts-ng/include/pkg_util.sh

create_inner_tarball() {
	local inner_tarball_dir=/tmp/_inner_tarball

	### clear destination directory
	[ -d $inner_tarball_dir ] && rm -rf $inner_tarball_dir
	mkdir -p $inner_tarball_dir

	### install needed file into PKG_DIR
	cp -r package/* $inner_tarball_dir

	### create package.txz: $1=source_dir, $2=dest_dir
	pkg_make_package $inner_tarball_dir "${PKG_DIR}"
} 

create_spk(){
	local scripts_dir=$PKG_DIR/scripts

	### Copy Package Center scripts to PKG_DIR
	mkdir -p $scripts_dir
	cp -av spk/scripts/* $scripts_dir

	### Copy package icon
	cp -av spk/PACKAGE_ICON*.PNG $PKG_DIR

	### Copy licence file
	cp -av spk/LICENSE $PKG_DIR

	### Copy conf
	cp -av spk/conf $PKG_DIR

	### Generate INFO file
	./INFO.sh > INFO
	cp INFO $PKG_DIR/INFO

	### Create the final spk.
	# pkg_make_spk <source path> <dest path> <spk file name>
	# Please put the result spk into /image/packages
	# spk name functions: pkg_get_spk_name pkg_get_spk_unified_name pkg_get_spk_family_name
	mkdir -p /image/packages
	pkg_make_spk ${PKG_DIR} "/image/packages" $(pkg_get_spk_family_name)
} 

pkg_log "Create package.tgz"
create_inner_tarball

pkg_log "Create spk"
create_spk